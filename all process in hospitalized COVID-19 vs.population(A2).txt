library(TwoSampleMR)
library(dplyr)
library(MRInstruments)
library(MRPRESSO)
library(ieugwasr)
library(daff)
library(fdrtool)
library(coloc)
library(ggplot2)
library(tidyr)
library(locuscomparer)
library(snpStats)
library(GWAS.utils)
library(LDlinkR)
library(tidyverse)
library(MungeSumstats)
library(ggforestplot)
library(data.table)

#Instrument selection and Validation
ALL_NEW_26597 <- read.csv("D:/covid19/ALL_NEW_26597.csv")
newCOVID19_HGI_A2_eur_GRCh37 <- read.csv("D:/covid19/newCOVID19_HGI_A2_eur_GRCh37.csv")

ALL_NEW_26597[["z-score"]]<- qnorm((ALL_NEW_26597$pvalue/2),lower.tail=F)
ALL_NEW_26597[["BETA"]]<- ALL_NEW_26597$rho.correlation.coefficient/sqrt(2*ALL_NEW_26597$effect_allele_freq*(1-ALL_NEW_26597$effect_allele_freq))
ALL_NEW_26597[["SE"]]<-abs(ALL_NEW_26597$BETA/ALL_NEW_26597$`z-score`)
ALL_NEW_26597$exposure<- paste0(ALL_NEW_26597$Gene.ID,"_",ALL_NEW_26597$celltype)
Exp_dat<- format_data(ALL_NEW_26597,
                      type = "exposure",
                      snp_col = "SNP",
                      beta_col = "BETA",
                      se_col = "SE",
                      z_col = "z-score",
                      eaf_col = "effect_allele_freq",
                      effect_allele_col = "effect_allele",
                      other_allele_col = "other_allele",
                      pval_col = "pvalue",
                      gene_col = "Gene.ID",
                      chr_col = "Chromosome",
                      pos_col = "Position",
                      phenotype_col = "exposure",
                      units_col = "Round")

Exp_dat<- clump_data(Exp_dat,clump_kb = 5000,
                     clump_r2 = 0.01,
                     clump_p1 = 1,
                     clump_p2 = 1,
                     pop = "EUR")


#Outcome selection 
Outcome_DAT <- format_data(
  newCOVID19_HGI_A2_eur_GRCh37,
  type = "outcome",
  snps =Exp_dat$SNP,
  eaf_col = "effect_allele_freq",
  pval_col = "p",
  beta_col = "beta",
  se_col = "se",
  effect_allele_col = "effect.allele",
  other_allele_col = "other.allele",
  chr_col = "chr",
  pos_col = "pos")

#Two-sample Mendelian Randomization 
#harmonization
Mydata <- harmonise_data(
  exposure_dat=Exp_dat,
  outcome_dat=Outcome_DAT,
  action= 2)

Mydata$rsq.exposure<- (get_r_from_bsen(b=Mydata$beta.exposure,
                                       Mydata$se.exposure,
                                       Mydata$samplesize.exposure))^2
Mydata$rsq.outcome<- (get_r_from_bsen(b=Mydata$beta.outcome,
                                      Mydata$se.outcome,
                                      Mydata$samplesize.outcome))^2
Mydata$F_statistics<-(Mydata$beta.exposure)^2/(Mydata$se.exposure)^2
Mydata<- subset(Mydata,Mydata$F_statistics>=10)

res <- mr(Mydata,method_list = subset(mr_method_list("mr_wald_ratio","mr_ivw")))
res<- res[order(res$pval),]
res$FDR<- p.adjust(res$pval,"BH")
res_final<- subset(res,res$FDR<0.05) 

#Directionality test using MR Steiger filtering
st_A2 <- psych::r.test( 
  n = Mydata$samplesize.exposure, 
  n2 = Mydata$samplesize.outcome, 
  r12 = sqrt(Mydata$rsq.exposure), 
  r34 = sqrt(Mydata$rsq.outcome))

Mydata$steiger_dir <- Mydata$rsq.exposure > Mydata$rsq.outcome
Mydata$steiger_pval <- pnorm(-abs(st_A2$z)) * 2 
Mydata_A2<- left_join(res_final,Mydata,by=c("id.exposure","exposure"))
Mydata_A2$Upper<- Mydata_A2$pos.outcome+500000
Mydata_A2$Lower<- Mydata_A2$pos.outcome-500000
ROUND<- ALL_NEW_26597[,c(1,3,4,8)] #with "Cell.type","Gene.Ensembl.ID", "SNP", "eSNP rank"
ROUND$exposure<- paste0(ROUND$Gene.Ensembl.ID,"_", ROUND$Cell.type)
ROUND<- ROUND[,c(3:5)]
Mydata_A2<- merge(Mydata_A2,ROUND,by=c("SNP","exposure"))

#Genetic colocalization and LD check analyses
#Cochranâ€™s Q test
het<- mr_heterogeneity(Mydata,method_list = subset(mr_method_list("mr_ivw")))

#LD check
input <- read_excel("LD_check_input.xlsx",sheet=1) #with SNP, Position, Chromosome, Upper, Lower and outcome columns

i<-1

for (i in 1:nrow(input))
{
  print(i)
  
  c <- NULL 
  d <- input[i,]
  id <- d[1,1]
  
  data <- newCOVID19_HGI_A2_eur_GRCh37 %>% 
    filter(between(pos,input$Lower[i],input$Upper[i]))
  data <- data %>%
    filter(!is.na(SNP))%>% filter(chr==input$chr.outcome[i])
  
  try(data <- data[order(data$p_value),])
  try(data <- data[data$p_value<1E-4,])
  
  if (nrow(data)!=0){
    rsid <- as.character(unlist(d[1,6]))
    snp <- append(as.character(unlist(data$snp)), rsid)
    
    a <- NULL
    attempts <- 0
    while(attempts<=10){    
      try(a <- ld_matrix(snp))  
      if(is.null(a)){
        attempts<-attempts+1}
      else{
        break
      }
    }
    
#If the number of snps in "data" exceeds 500, please analyze it in segments (each segment up to 499 SNPs and should also append with "rsid" character)


    if(is.null(nrow(a))==TRUE){
      c <- as.data.frame(cbind(as.character(unlist(d[1,6])), as.character(unlist(d[1,1])),rsid, 1 ) )
    } else {
      col.index <- which(grepl(rsid,colnames(a)))
      b <- (a[,col.index])^2
      b <- b[order(b)]
      b <- b[(length(b)-1)] 
      c <- as.data.frame(cbind(as.character(unlist(d[1,6])),as.character(unlist(d[1,1])), names(b), as.character(unlist(b))) )
    }
    
  } else {
    c <- as.data.frame(cbind(as.character(unlist(d[1,6])), as.character(unlist(d[1,1])),"NA","NA" ) ) 
  }
  
  result_file <- paste0("./ld-check/",as.character(unlist(d[1,6])),".",as.character(unlist(d[1,1])),"_ldcheck")
  if (exists("c")==TRUE){ write.table(c,file = paste("ld check_A2", input$SNP[i],input$gene.exposure[i] ,".csv"),sep=",",col.names=T,row.names=F,quote=F)} 
}

#Genetic colocalization analysis

all_cell <- read.table("all_cell.txt",sep="\t",header=FALSE)
Mydata_res<- read.table("Mydata_A2.txt",sep="\t",header=FALSE)
SAMPLE_SIZE_FOR_EQTL<- read.table("sample_size.txt",sep="\t",header=FALSE) #four columns with CELL_ID, samplesize, filename and cellid(previous names in onek1k) for each kind of cell type
newCOVID19_HGI_2_AALL_EUR_GRCh37 <- read.table("newCOVID19_HGI_A2_ALL_EUR_GRCh37.txt",sep="\t",header=FALSE)


i=1
for (i in 1:nrow(SAMPLE_SIZE_FOR_EQTL))
{
  setwd('H:\\covid\\new onek1k\\onek1k tsv')
  all_cell <- fread(file = as.character(unlist(SAMPLE_SIZE_FOR_EQTL$filename[i])),sep="\t",
                    select = c("CELL_ID","RSID","SPEARMANS_RHO","GENE_ID","CHR","POS",
                               "A1","A2","A2_FREQ_ONEK1K","P_VALUE","ROUND")) #A1 refers to other allele, A2 refers to effect allele;
  gc()
  all_cell <- all_cell %>% mutate(CELL_ID = ifelse(CELL_ID ==SAMPLE_SIZE_FOR_EQTL$cellid[i],SAMPLE_SIZE_FOR_EQTL$CELL_ID[i] , CELL_ID))
  gc()
  all_cell$exposure<- paste0(all_cell$GENE_ID,"_",all_cell$CELL_ID)
  all_cell[1,]
  Celltype<- unique(as.character(all_cell$CELL_ID))
  Mydata<- Mydata_res %>% filter(Cell.type==Celltype)
  gc()
  
  w=1
  for (w in 1:nrow(Mydata))
  { 
    eqtl<- all_cell %>% filter(exposure==Mydata$exposure[w])
    
    eqtl<-eqtl %>% filter(between(POS,Mydata$Lower[w]+400000,Mydata$Upper[w]-400000))
    
    eqtl$variant_id<- paste0("chr",eqtl$CHR,"_",
                             eqtl$POS,"_",
                             eqtl$A1,"_",
                             eqtl$A2,"_","b37")
    
    eqtl$maf<- eaf2maf(eqtl$A2_FREQ_ONEK1K)
    eqtl[["z-score"]]<- qnorm((eqtl$P_VALUE/2),lower.tail=F)
    eqtl[["BETA"]]<- eqtl$SPEARMANS_RHO/sqrt(2*eqtl$A2_FREQ_ONEK1K*(1-eqtl$A2_FREQ_ONEK1K))
    eqtl[["se"]]<-abs(eqtl$BETA/eqtl$`z-score`)
    eqtl$verbeta<-(eqtl$se)^2
    eqtl$eSNP_rank<- paste0("eSNP",eqtl$ROUND)
    N<- subset(SAMPLE_SIZE_FOR_EQTL,SAMPLE_SIZE_FOR_EQTL$CELL_ID==Mydata$Cell.type[w])
    eqtl$N<- as.numeric(N[1,2])
    eqtl<- subset(eqtl,eqtl$eSNP_rank==Mydata$ROUND.exposure[w])
    
    gwas<- data.frame()
    input<-data.frame()
    result<-list()
    dataset1<- list()
    dataset2<- list()
    summary<- data.frame()
    single_snp_results<- data.frame()
    
    gwas <- newCOVID19_HGI_A2_ALL_EUR_GRCh37 %>% filter(between(pos,Mydata$Lower[w]+400000,Mydata$Upper[w]-400000))
    gwas$variant_id<- paste0("chr",gwas$chr,"_",
                             gwas$pos,"_",
                             gwas$other.allele,"_",
                             gwas$effect.allele,"_","b37")
    gwas<- gwas %>% filter(chr==Mydata$chr.outcome[w]) %>% filter(!is.na(variant_id))
    gwas$verbeta <- (gwas$se)^2
    eqtl$SNP <- paste0(eqtl$CHR,":",eqtl$POS)
    colnames(gwas)[1]<- "RSID"
    gwas$SNP <- paste0(gwas$chr,":",gwas$pos)
    gc()
    input <- merge(eqtl,gwas, by="SNP", all=FALSE, suffixes=c("_eqtl","_gwas"))
    input_1<-subset(input,input$variant_id_eqtl==input$variant_id_gwas)
    input_2<- input[!input$variant_id_eqtl %in% input_1$variant_id_eqtl,]
    colnames(input_2)[23]<- "other.allele"
    colnames(input_2)[24]<- "effect.allele"
    input_2$variant_id_gwas<- paste0("chr",input_2$chr,"_",
                                     input_2$pos,"_",
                                     input_2$other.allele,"_",
                                     input_2$effect.allele,"_","b37")
    input_2<- input_2[input_2$variant_id_gwas %in% input_2$variant_id_eqtl,]
    input_2$beta<- -(input_2$beta)
    input_2$effect_allele_freq<- 1-input_2$effect_allele_freq
    input_final<- rbind(input_1,input_2)
    input_final$verbeta_eqtl <- ifelse(input_final$verbeta_eqtl == "NaN", 0, input_final$verbeta_eqtl)
    input_final$se_eqtl <- ifelse(input_final$se_eqtl == "NaN", 0, input_final$se_eqtl)
    input_final$p <- ifelse(input_final$p == 0, 1E-200, input_final$p)
    
    result <- coloc.abf(
      dataset1=list(pvalues=input_final$p, type="cc",beta=input_final$beta,verbeta=input_final$verbeta_gwas,s=input_final$s,N=input_final$n),
      dataset2=list(pvalues=input_final$P_VALUE, type="quant", N=input_final$N,verbeta=input_final$verbeta_eqtl,beta=input_final$BETA),MAF=input_final$maf)
    
    summary<- result$summary
    Summary<- as.data.frame(summary)
    Summary_t <- t(Summary)
    Summary<- as.data.frame(Summary_t)
    Summary$SNP<- paste0(Mydata$SNP[w])
    Summary$exposure<- paste0(Mydata$exposure[w])
    
    single_snp_results<- result$results    
    single_snp_results<- single_snp_results[order(single_snp_results$SNP.PP.H4,decreasing = T),]
    m<- single_snp_results[1,2]
    rsid<- subset(input_final, input_final$p==m)
    c <- as.data.frame(cbind(as.character(Mydata$X.exposure[w]),as.character(Mydata$pval.exposure[w]),as.character(rsid[1,3]),as.character(single_snp_results[1,17]) ) ) 
    colnames(c)[1]<- "exposure_rsid"
    colnames(c)[2]<- "p_expo"
    colnames(c)[3]<- "col_snp"
    colnames(c)[4]<- "col_snp_PPH4"
    Summary_1<- cbind(Summary,c)
    Summary<- Summary_1
    remove(Summary_1)
    write.table(Summary, file = paste("Summary",Mydata$X.exposure[w], ".csv"), sep="," )
    gc()
  } 
  remove(all_cell)
  gc()
}
