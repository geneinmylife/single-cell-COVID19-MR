library(TwoSampleMR)
library(dplyr)
library(MRInstruments)
library(MRPRESSO)
library(ieugwasr)
library(daff)
library(fdrtool)
library(coloc)
library(ggplot2)
library(tidyr)
library(locuscomparer)
library(snpStats)
library(GWAS.utils)
library(LDlinkR)
library(tidyverse)
library(MungeSumstats)
library(ggforestplot)
library(data.table)

# mr process
#Instrument selection and Validation
ALL_NEW_26597 <- read.csv("D:/covid19/ALL_NEW_26597.csv")

ALL_NEW_26597[["z-score"]]<- qnorm((ALL_NEW_26597$pvalue/2),lower.tail=F)
ALL_NEW_26597[["BETA"]]<- ALL_NEW_26597$rho.correlation.coefficient/sqrt(2*ALL_NEW_26597$effect_allele_freq*(1-ALL_NEW_26597$effect_allele_freq))
ALL_NEW_26597[["SE"]]<-abs(ALL_NEW_26597$BETA/ALL_NEW_26597$`z-score`)
ALL_NEW_26597$exposure<- paste0(ALL_NEW_26597$Gene.ID,"_",ALL_NEW_26597$celltype)
Exp_dat<- format_data(ALL_NEW_26597,
                      type = "exposure",
                      snp_col = "SNP",
                      beta_col = "BETA",
                      se_col = "SE",
                      z_col = "z-score",
                      eaf_col = "effect_allele_freq",
                      effect_allele_col = "effect_allele",
                      other_allele_col = "other_allele",
                      pval_col = "pvalue",
                      gene_col = "Gene.ID",
                      chr_col = "Chromosome",
                      pos_col = "Position",
                      phenotype_col = "exposure",
                      units_col = "Round")

Exp_dat<- clump_data(Exp_dat,clump_kb = 5000,
                     clump_r2 = 0.01,
                     clump_p1 = 1,
                     clump_p2 = 1,
                     pop = "EUR")


#Outcome selection 
longcovid<- read.csv("D:/covid19/long_covid_A.csv") #long_covid_A as example,long_covid_B,long_covid_C,long_covid_D four distinct gwas in total
colnames(longcovid)[1]<- "CHR"
colnames(longcovid)[2]<- "POS"
colnames(longcovid)[3]<- "SNP"
colnames(longcovid)[4]<- "other.allele"
colnames(longcovid)[5]<- "effect.allele"
colnames(longcovid)[6]<- "-LOGP"
colnames(longcovid)[7]<- "beta"
colnames(longcovid)[8]<- "se"
colnames(longcovid)[9]<- "effect_allele_freq"
longcovid$P <- 10^(-longcovid$`-LOGP`)
longcovid[1,]

Outcome_DAT <- format_data(
  longcovid,
  type = "outcome",
  snps =Exp_dat$SNP,
  eaf_col = "effect_allele_freq",
  pval_col = "P",
  beta_col = "beta",
  se_col = "se",
  effect_allele_col = "effect.allele",
  other_allele_col = "other.allele",
  chr_col = "CHR",
  pos_col = "POS")

#Two-sample Mendelian Randomization 
#harmonization
Mydata <- harmonise_data(
  exposure_dat=Exp_dat,
  outcome_dat=Outcome_DAT,
  action= 2)

Mydata$rsq.exposure<- (get_r_from_bsen(b=Mydata$beta.exposure,
                                       Mydata$se.exposure,
                                       Mydata$samplesize.exposure))^2
Mydata$rsq.outcome<- (get_r_from_bsen(b=Mydata$beta.outcome,
                                      Mydata$se.outcome,
                                      Mydata$samplesize.outcome))^2
Mydata$F_statistics<-(Mydata$beta.exposure)^2/(Mydata$se.exposure)^2
Mydata<- subset(Mydata,Mydata$F_statistics>=10)

res <- mr(Mydata,method_list = c("mr_wald_ratio","mr_ivw"))
res<- res[order(res$pval),]
res$FDR<- p.adjust(res$pval,"BH")
res_final<- subset(res,res_A$pval<0.001) 

#Directionality test using MR Steiger filtering
st <- psych::r.test( 
  n = Mydata$samplesize.exposure, 
  n2 = Mydata$samplesize.outcome, 
  r12 = sqrt(Mydata$rsq.exposure), 
  r34 = sqrt(Mydata$rsq.outcome))

Mydata$steiger_dir <- Mydata$rsq.exposure > Mydata$rsq.outcome
Mydata$steiger_pval <- pnorm(-abs(st$z)) * 2 
Mydata_res<- left_join(res_final,Mydata,by=c("id.exposure","exposure"))
Mydata$Upper<- Mydata$pos.exposure+500000
Mydata$Lower<- Mydata$pos.exposure-500000

#Genetic colocalization and LD check analyses
#Cochranâ€™s Q test
het<- mr_heterogeneity(Mydata,method_list = subset(mr_method_list("mr_ivw")))

setwd("H:\\covid\\reply to ebio\\long covid\\long covid mr\\A group res")
write.table(het, paste0("het_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(Mydata, paste0("Mydata_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(Mydata_res, paste0("Mydata_res_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(res_A, paste0("res_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(res_final, paste0("res_final_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(Exp_dat, paste0("Exp_dat",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(Outcome_DAT, paste0("Outcome_DAT_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
#write.table(input, paste0("input",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)
write.table(longcovid, paste0("longcovid_A",".txt"), row.names = FALSE, sep = '\t', quote = FALSE)

#LD check
input <- read_excel("LD_check_input.xlsx",sheet=1) #with SNP, Position, Chromosome, Upper, Lower and outcome columns
input<- Mydata[,c(11,24,25,53,54)]
input$outcome<- "longcovid_A"
i<-1

for (i in 1:nrow(input))
{
  print(i)
  
  c <- NULL 
  d <- input[i,]
  id <- d[1,6]
  
  data <- longcovid_A %>% 
    filter(between(POS,input$Lower[i],input$Upper[i]))
  data <- data %>%
    filter(!is.na(SNP))%>% filter(CHR==input$chr.outcome[i])
  
  try(data <- data[order(data$P),])
  try(data <- data[data$P<1E-4,])
  
  if (nrow(data)!=0){
    rsid <- as.character(unlist(d[1,1]))
    snp <- append(as.character(unlist(data$SNP)), rsid)
    
    a <- NULL
    attempts <- 0
    while(attempts<=10){    
      try(a <- LDmatrix(snps = snp, 
                        pop = "EUR",token = '5f568d11b50d',
                        file =FALSE))  
      if(is.null(a)){
        attempts<-attempts+1}
      else{
        break
      }
    }
    
    #If the number of snps in "data" exceeds 500, please analyze it in segments (each segment up to 499 SNPs and should also append with "rsid" character)
    
    
    if(is.null(nrow(a))==TRUE){
      c <- as.data.frame(cbind(as.character(unlist(d[1,1])),rsid, 1 ) )
    } else {
      col.index <- which(grepl(rsid,colnames(a)))
      b<- a[,c(1,col.index)]
      colnames(b)[2]<- "rsid"
      b<- b[order(b$rsid,decreasing = T),]
      e <- b[2,1] 
      f <- b[2,2]
      c <- as.data.frame(cbind(as.character(unlist(d[1,1])), e, f)) 
    }
    
  } else {
    c <- as.data.frame(cbind(as.character(unlist(d[1,1])), "NA","NA" ) ) 
  }
  
  result_file <- paste0("./ld-check/",as.character(unlist(d[1,1])),"_ldcheck")
  if (exists("c")==TRUE){ write.table(c,file = paste("ld check_A", input$SNP[i] ,".csv"),sep=",",col.names=T,row.names=F,quote=F)} 
}

# coloc process
i=1
for (i in 1:nrow(SAMPLE_SIZE_FOR_EQTL))
{
  setwd('F:\\')
  all_cell <- fread(file = as.character(unlist(SAMPLE_SIZE_FOR_EQTL$filename[i])),sep="\t",
                    select = c("CELL_ID","RSID","SPEARMANS_RHO","GENE_ID","CHR","POS",
                               "A1","A2","A2_FREQ_ONEK1K","P_VALUE","ROUND"))
  gc()
  all_cell <- all_cell %>% mutate(CELL_ID = ifelse(CELL_ID ==SAMPLE_SIZE_FOR_EQTL$cellid[i],SAMPLE_SIZE_FOR_EQTL$CELL_ID[i] , CELL_ID))
  gc()
  all_cell$exposure<- paste0(all_cell$GENE_ID,"_",all_cell$CELL_ID)
  all_cell[1,]
  Celltype<- unique(as.character(all_cell$CELL_ID))
  longcovid<- Mydata_res %>% filter(Cell.type==Celltype)
  gc()
  
  w=1
  for (w in 1:nrow(longcovid))
  { 
    eqtl<- all_cell %>% filter(exposure==longcovid$exposure[w])
    
    eqtl<-eqtl %>% filter(between(POS,longcovid$pos.exposure[w]-100000,longcovid$pos.exposure[w]+100000))
    
    eqtl$variant_id<- paste0("chr",eqtl$CHR,"_",
                             eqtl$POS,"_",
                             eqtl$A1,"_",
                             eqtl$A2,"_","b37")
    
    eqtl$maf<- eaf2maf(eqtl$A2_FREQ_ONEK1K)
    eqtl[["z-score"]]<- qnorm((eqtl$P_VALUE/2),lower.tail=F)
    eqtl[["BETA"]]<- eqtl$SPEARMANS_RHO/sqrt(2*eqtl$A2_FREQ_ONEK1K*(1-eqtl$A2_FREQ_ONEK1K))
    eqtl[["se"]]<-abs(eqtl$BETA/eqtl$`z-score`)
    eqtl$verbeta<-(eqtl$se)^2
    eqtl$eSNP_rank<- paste0("eSNP",eqtl$ROUND)
    N<- subset(SAMPLE_SIZE_FOR_EQTL,SAMPLE_SIZE_FOR_EQTL$CELL_ID==longcovid$Cell.type[w])
    eqtl$N<- as.numeric(N[1,2])
    eqtl<- subset(eqtl,eqtl$eSNP_rank==longcovid$ROUND[w])
    setwd("H:\\covid\\reply to ebio\\long covid\\long covid mr\\all eqtl")
    write.table(eqtl, file = paste("eqtl",longcovid$outcome.x[w],longcovid$X[w],".csv"), sep="," )
  } 
    gwas<- data.frame()
    input<-data.frame()
    result<-list()
    dataset1<- list()
    dataset2<- list()
    summary<- data.frame()
    single_snp_results<- data.frame()
    
    gwas <- longcovid_A %>% filter(between(POS,Mydata$pos.outcome[w]-100000,Mydata$pos.outcome[w]+100000))

    gwas<- gwas %>% filter(CHR==Mydata$chr.outcome[w]) %>% filter(!is.na(SNP))
    gwas$verbeta <- (gwas$se)^2
    eqtl$SNP <- paste0(eqtl$CHR,":",eqtl$POS)
    colnames(gwas)[3]<- "RSID"
    gwas$SNP <- paste0(gwas$CHR,":",gwas$POS)
    chrpos<- eqtl[,c(2,5,6)]
    colnames(chrpos)[2]<- "chr"
    #colnames(chrpos)[3]<- "pos"
    #gwas<- left_join(gwas,chrpos,by="RSID")
    gwas$variant_id<- paste0("chr",gwas$CHR,"_",
                                   gwas$POS,"_",
                             gwas$other.allele,"_",
                             gwas$effect.allele,"_","b37")
    
    write.table(gwas, file = paste("gwas",Mydata$X.exposure[i],".csv"), sep="," ) 
    colnames(gwas)[3]<- "RSID"
    gwas$verbeta <- (gwas$se)^2
    chrpos<- eqtl[,c(2,5,6)]
    colnames(chrpos)[2]<- "chr.exp"
    colnames(chrpos)[3]<- "pos.exp"
    gwas<- left_join(gwas,chrpos,by="RSID")
    gwas$variant_id<- paste0("chr",gwas$chr.exp,"_",
                             gwas$pos.exp,"_",
                             gwas$other.allele,"_",
                             gwas$effect.allele,"_","b37")
    
    input <- merge(eqtl,gwas, by="RSID", all=FALSE, suffixes=c("_eqtl","_gwas"))
    input_1<-subset(input,input$variant_id_eqtl==input$variant_id_gwas)
    input_2<- input[!input$variant_id_eqtl %in% input_1$variant_id_eqtl,]
   
    if(nrow(input_2)==0){input_2<-input_2}else
      { colnames(input_2)[24]<- "other.allele"
      colnames(input_2)[23]<- "effect.allele"
      input_2$variant_id_gwas<- paste0("chr",input_2$chr.exp,"_",
                                       input_2$pos.exp,"_",
                                       input_2$other.allele,"_",
                                       input_2$effect.allele,"_","b37")
      input_2<- input_2[input_2$variant_id_gwas %in% input_2$variant_id_eqtl,]
      input_2$beta<- -(input_2$beta)
      input_2$effect_allele_freq<- 1-input_2$effect_allele_freq
    }
    
    input_final<- rbind(input_1,input_2)
    input_final$verbeta_eqtl <- ifelse(input_final$verbeta_eqtl == "NaN", 0, input_final$verbeta_eqtl)
    input_final$se_eqtl <- ifelse(input_final$se_eqtl == "NaN", 0, input_final$se_eqtl)
    input_final$P <- ifelse(input_final$P == 0, 1E-200, input_final$P)
    
    #Mydata[i,55]<-as.numeric(nrow(input_final))
    #colnames(Mydata)[57]<- "coloc_input_number"
    write.table(input_final, file = paste("input_final",Mydata$X.exposure[i],".csv"), sep="," )
    
    result <- coloc.abf(
      dataset1=list(pvalues=input_final$P, type="cc",beta=input_final$beta,verbeta=input_final$verbeta_gwas,s=input_final$s,N=input_final$samplesize),
      dataset2=list(pvalues=input_final$P_VALUE, type="quant", N=input_final$N,verbeta=input_final$verbeta_eqtl,beta=input_final$BETA),MAF=input_final$maf)
    
    summary<- result$summary
    Summary<- as.data.frame(summary)
    Summary_t <- t(Summary)
    Summary<- as.data.frame(Summary_t)
    Summary$SNP<- paste0(A[w])
    
    single_snp_results<- result$results
    #write.table(single_snp_results, file = paste("single_snp_results",Mydata$X.exposure[i],".csv"), sep="," )
    
    single_snp_results<- single_snp_results[order(single_snp_results$SNP.PP.H4,decreasing = T),]
    m<- single_snp_results[1,2]
    rsid<- subset(input_final, input_final$P==m)
    c <- as.data.frame(cbind(A[w],as.character(rsid[1,1]),as.character(single_snp_results[1,17]) ) ) 
    colnames(c)[1]<- "exposure_rsid"
    colnames(c)[2]<- "col_snp"
    colnames(c)[3]<- "col_snp_PPH4"
    Summary_1<- cbind(Summary,c)
    Summary<- Summary_1
    remove(Summary_1)
    write.table(Summary, file = paste("Summary",a[w], ".csv"), sep="," )
    gc()
  } 
  remove(all_cell)
  gc()
}
